# Random aliases
alias vim='nvim'
alias v='nvim'
alias :q='exit'
alias beep="tput bel; sleep 0.3"
alias prettypath='echo $PATH | sed "s/:/\n/g"'

# Rebind if installed
command -v bat &>/dev/null && alias bat='bat -P'

# Common command shortcuts
alias ls='ls --color=auto'
alias l='ls -lAh'
alias la='ls -lah'
alias ll='ls -lh'
alias md='mkdir -p'
mcd() { mkdir -p $1 && cd $1 }

# Use z to cd to most common directory
zz() { cd "$(z | tail -n1 | awk '{print $2}')" }

# Slightly over-engineered colour tester (useful when tweaking prompt colours)
promptcolours() {
  local quiet=false inline=false custom='' on='%K' off='%k' text='   '

  while [[ $# -gt 0 ]]; do
    case $1 in
      -q)
        quiet=true
        ;;
      -f)
        on='%F'; off='%f'; text="Foo "
        ;;
      -s)
        custom="$2"
        shift
        ;;
      -i)
        inline=true
        ;;
      *)
        echo "Usage:"
        echo " -h: Show help"
        echo " -q: Disable printing colour code labels"
        echo " -f: Colour foreground (i.e. text) instead of background"
        echo " -s <arg>: Override coloured string to <arg>"
        echo " -i: Inline colour codes (prepend to override string if passed)"
        return
        ;;
    esac
    shift # Always shift once after each arg
  done

  [[ $inline = true ]] && text=""
  [[ $custom ]] && text="$custom"

  local i
  for i in {000..255}; do
    local code="$i"
    if [[ $quiet = true ]] || [[ $inline = true ]]; then
      code=""
    fi
    local temp="$text"
    [[ $inline = true ]] && temp="$i$temp"
    print -nP "$code$on{$i}$temp$off"
    if (( i >= 15 )) && (( (i-15) % 6 == 0 )); then
      print
    elif (( i == 7 )); then
      print
    fi
  done
}

# function to gauge zsh's startup time
timezsh () {
  repeat 10 { time ${1-$SHELL} -i -c exit }
}

cpustress () {
  [[ ! -z "$1" ]] && local cores=$1 || local cores=$(sysctl -n hw.ncpu)

  local core
  for core in {1..$cores}; do
      dd if='/dev/random' of='/dev/null' &
  done

  echo "Stressing ${cores} core(s)\nPress enter to stop stressing"
  read; killall dd; echo 'Done'
}

countdown () {
  local n=${1:=1}
  local msg=${2:=countdown}

  local reset="$(tput cuu 1)$(tput el)"
  echo
  local i
  for i in {$n..1}; do {
    printf "$reset$msg: $i\n"
    sleep 1
  }; done
  printf "${reset}"
}

# intervalbeeper [loops] [go] [rest]
intervalbeeper () {
  local n=${1:=1}
  local go=${2:=55}
  local rest=${3:=5}

  for interval in {1..$n}; do {
    echo $interval
    countdown $rest pause
    beep
    countdown $go go
    beep; beep
  }; done
  beep
}

# Has a 1-in-n chance of returning 0
chance () {
  [[ -z $1 || $1 -le 0 ]] && return 1
  [[ $RANDOM -lt $((32767 / $1 + 1)) ]]
}

# Git
git_current_branch() {
  git rev-parse --abbrev-ref HEAD
}
git_default_branch() {
  git symbolic-ref refs/remotes/origin/HEAD | sed 's|^refs/remotes/origin/||'
}
# git add
alias ga='git add'
alias gaa='git add --all'
alias gap='git add --patch'
# git branch
alias gb='git branch'
alias gbD='git branch -D'
alias gbd='git branch -d'
# git bisect
alias gbi='git bisect'
alias gbgood='git bisect good'
alias gbbad='git bisect bad'
# git commit
alias gc='git commit -v'
alias gca='git commit -v -a'
alias gcm='git commit -m'
# git checkout
alias gco='git checkout'
# git switch
alias gss='git switch'
alias gsc='git switch -c'
alias gsd='git switch $(git_default_branch)'
# git diff
alias gd='git diff'
alias gds='git diff --stat'
alias gdca='git diff --cached'
# git pull
alias gf='git fetch'
alias gl='git pull'
alias gla='git pull --autostash'
alias glforce='git fetch && git reset --hard origin/$(git_current_branch)'
# git log
alias glg='git log --stat'
alias glgo='git log --oneline --decorate'
# git merge
alias gm='git merge'
alias gmd='git merge $(git_default_branch)'
alias gmod='git merge origin/$(git_default_branch)'
# git push
alias gp='git push'
alias gpforce='git push --force-with-lease'
alias gpforce2='git push --force'
alias gpsup='git push -u origin $(git_current_branch)'
# git rebase
alias grb='git rebase'
# git restore - discard unstaged changes
alias grs='git restore'
# git status
alias gs='git status'
# git stash
alias gst='git stash'
alias gstp='git stash pop'
# git update-index
alias gignore='git update-index --assume-unchanged'
alias gunignore='git update-index --no-assume-unchanged'
# git add all & commit w/ ISO date as commit msg
alias gcdate='git add --all && git commit -m "$(date -Iseconds)"'

# Silly helpers
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
# Note: these need setopt PUSHD_MINUS to work, otherwise should use + instead
alias -- -='cd -'
alias 1='cd -'
alias 2='cd -2'
alias 3='cd -3'
alias 4='cd -4'
alias 5='cd -5'
alias 6='cd -6'
alias 7='cd -7'
alias 8='cd -8'
alias 9='cd -9'
